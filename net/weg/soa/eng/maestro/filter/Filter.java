
package net.weg.soa.eng.maestro.filter;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "Filter", targetNamespace = "http://soa.weg.net/eng/maestro/filter", wsdlLocation = "file:/C:/Users/efarias/Desktop/ObjectFilter.wsdl")
public class Filter extends Service
{

    private final static URL FILTER_WSDL_LOCATION;
    private final static WebServiceException FILTER_EXCEPTION;
    private final static QName FILTER_QNAME = new QName("http://soa.weg.net/eng/maestro/filter", "Filter");
    private final static Logger LOGGER = LogManager.getLogger(net.weg.soa.eng.maestro.filter.Filter.class.getName());

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/C:/Projetos/maestro/development/maestro/src/main/resources/ObjectFilter.wsdl");
        } catch (MalformedURLException ex) {
            LOGGER.warn("Failed to create URL for the wsdl Location: 'file:/C:/Projetos/maestro/development/maestro-admin/src/main/resources/ObjectFilter.wsdl', retrying as a local file");
            LOGGER.warn(e.getMessage());
            e = new WebServiceException(ex);
        }
        FILTER_WSDL_LOCATION = url;
        FILTER_EXCEPTION = e;
    }

    public Filter() {
        super(getWsdlLocation(), FILTER_QNAME);
    }

    public Filter(WebServiceFeature... features) {
        super(getWsdlLocation(), FILTER_QNAME, features);
    }

    public Filter(URL wsdlLocation) {
        super(wsdlLocation, FILTER_QNAME);
    }

    public Filter(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, FILTER_QNAME, features);
    }

    public Filter(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Filter(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ObjectFilter
     */
    @WebEndpoint(name = "ObjectFilter")
    public ObjectFilter getObjectFilter() {
        return super.getPort(new QName("http://soa.weg.net/eng/maestro/filter", "ObjectFilter"), ObjectFilter.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ObjectFilter
     */
    @WebEndpoint(name = "ObjectFilter")
    public ObjectFilter getObjectFilter(WebServiceFeature... features) {
        return super.getPort(new QName("http://soa.weg.net/eng/maestro/filter", "ObjectFilter"), ObjectFilter.class, features);
    }

    private static URL getWsdlLocation() {
        if (FILTER_EXCEPTION!= null) {
            throw FILTER_EXCEPTION;
        }
        return FILTER_WSDL_LOCATION;
    }

}
